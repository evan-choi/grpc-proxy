//HintName: ITestClient.gen.cs
// <auto-generated>
//     Generated by the gRPC Proxy.  DO NOT EDIT!
//     service: a.b.c.d.Test
// </auto-generated>
using grpc = global::Grpc.Core;
using grpcProxy = global::Grpc.Proxy;

namespace Grpc.Proxy.Tests.Proto;

[grpcProxy::GrpcServiceClient(typeof(Test.TestClient))]
public interface ITestClient
{
    global::Grpc.Proxy.Tests.Proto.PongResponse Ping(global::Grpc.Proxy.Tests.Proto.PingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
    global::Grpc.Proxy.Tests.Proto.PongResponse Ping(global::Grpc.Proxy.Tests.Proto.PingRequest request, grpc::CallOptions options);
    grpc::AsyncUnaryCall<global::Grpc.Proxy.Tests.Proto.PongResponse> PingAsync(global::Grpc.Proxy.Tests.Proto.PingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
    grpc::AsyncUnaryCall<global::Grpc.Proxy.Tests.Proto.PongResponse> PingAsync(global::Grpc.Proxy.Tests.Proto.PingRequest request, grpc::CallOptions options);
    grpc::AsyncClientStreamingCall<global::Grpc.Proxy.Tests.Proto.PingRequest, global::Grpc.Proxy.Tests.Proto.PongResponse> PingClientStream(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
    grpc::AsyncClientStreamingCall<global::Grpc.Proxy.Tests.Proto.PingRequest, global::Grpc.Proxy.Tests.Proto.PongResponse> PingClientStream(grpc::CallOptions options);
    grpc::AsyncDuplexStreamingCall<global::Grpc.Proxy.Tests.Proto.PingRequest, global::Grpc.Proxy.Tests.Proto.PongResponse> PingDuplexStream(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
    grpc::AsyncDuplexStreamingCall<global::Grpc.Proxy.Tests.Proto.PingRequest, global::Grpc.Proxy.Tests.Proto.PongResponse> PingDuplexStream(grpc::CallOptions options);
    grpc::AsyncServerStreamingCall<global::Grpc.Proxy.Tests.Proto.PongResponse> PingServerStream(global::Grpc.Proxy.Tests.Proto.PingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
    grpc::AsyncServerStreamingCall<global::Grpc.Proxy.Tests.Proto.PongResponse> PingServerStream(global::Grpc.Proxy.Tests.Proto.PingRequest request, grpc::CallOptions options);

}
