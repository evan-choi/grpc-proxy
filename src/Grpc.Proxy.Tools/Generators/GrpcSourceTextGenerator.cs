using System.Text;
using Grpc.Proxy.Tools.Models;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;

namespace Grpc.Proxy.Tools.Generators;

internal abstract class GrpcSourceTextGenerator
{
    protected GrpcSourceTextGeneratorContext Context { get; }

    private readonly StringBuilder _gen = new();

    protected GrpcSourceTextGenerator(GrpcSourceTextGeneratorContext context)
    {
        Context = context;
        WriteHeaderComment();
    }

    private void WriteHeaderComment()
    {
        _gen.AppendLine("// <auto-generated>");
        _gen.AppendLine("//     Generated by the gRPC Proxy.  DO NOT EDIT!");
        _gen.AppendLine($"//     service: {Context.BaseDeclaration.ServiceDeclaration.ServiceName}");
        _gen.AppendLine("// </auto-generated>");
    }

    public void WriteHeader()
    {
        WriteHeader(_gen);
    }

    public void WriteMethod(string methodField, GrpcMethodDeclaration method)
    {
        WriteMethod(_gen, methodField, method);
    }

    public void WriteFooter()
    {
        WriteFooter(_gen);
    }

    public void Complete(SourceProductionContext context)
    {
        OnComplete(context, SourceText.From(_gen.ToString(), Encoding.UTF8));
    }

    protected abstract void WriteHeader(StringBuilder gen);

    protected abstract void WriteMethod(StringBuilder gen, string methodField, GrpcMethodDeclaration method);

    protected abstract void WriteFooter(StringBuilder gen);

    protected abstract void OnComplete(SourceProductionContext context, SourceText sourceText);
}
